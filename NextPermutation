Problem Description: Implement the next permutation, which rearranges numbers into the numerically next greater permutation of numbers for a given array A of size N.
If such arrangement is not possible, it must be rearranged as the lowest possible order i.e., sorted in an ascending order.

Problem Constraints: 
1 <= N <= 5e5
1 <= A[i] <= 1e9
-> The replacement must be in-place, do **not** allocate extra memory.

Sample Input: A = [1, 2, 3]

Sample Output: [1, 3, 2]

Code (C++):

vector<int> Solution::nextPermutation(vector<int> &A) {
    int ind1 = -1, ind2 = -1;
    for(int i=A.size()-2;i>=0;i--){
        if(A[i]<A[i+1]){
            ind1 = i;
            break;
        }
    }
    if(ind1 == -1){
        reverse(A.begin(),A.end());
        return A;
    }
    for(int i = A.size()-1;i>=0;i--){
        if(A[i]>A[ind1]){
            ind2 = i;
            break;
        }
    }
    int temp = A[ind1];
    A[ind1] = A[ind2];
    A[ind2] = temp;
    reverse(A.begin()+ind1+1,A.end());
    return A;
}

Question Link: https://www.interviewbit.com/problems/next-permutation/
